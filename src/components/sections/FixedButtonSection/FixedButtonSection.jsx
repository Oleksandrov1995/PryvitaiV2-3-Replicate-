import React, { useState, useEffect, useCallback } from 'react';
import './FixedButtonSection.css';
 
export const FixedButtonSection = ({ formData, onGenerateImage, loading, onButtonClick }) => {
  // useState –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏–º —Ä—ñ–≤–Ω–µ–º —Ç–∞ –ø—Ä–æ–≥—Ä–µ—Å–æ–º
  const [currentLevel, setCurrentLevel] = useState(0);
  // –°—Ç–∞–Ω–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏
  const states = [
    {
      stateText: "–î–æ–Ω—Ç –ø—É—Ä—à –∑–µ —Ö–æ—Ä—Å–µ—Å‚úã",
      hintText: "–û–±–µ—Ä—ñ—Ç—å —â–æ –Ω–∞–π–º–µ–Ω—à–µ —Å—Ç–∏–ª—å, –Ω–∞—Å—Ç—Ä—ñ–π —Ç–∞ —Ñ–æ—Ç–æ",
      btnClass: "MainBtn1",
      stateClass: "stateText1",
      hintClass: "hintText1",
      disabled: true,
    },
    {
      stateText: "–í–∂–µ —î –º—ñ–Ω—ñ–º—É–º –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–∞—Ä—Ç–∏–Ω–∫–∏",
      hintText: "–î–æ–¥–∞–π—Ç–µ —â–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É",
      btnClass: "MainBtn2",
      stateClass: "stateText2",
      hintClass: "hintText2",
      disabled: false,
    },
    {
      stateText: "–¶–µ –∑–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç—ñ‚òùÔ∏è",
      hintText: "–ë—ñ–ª—å—à–µ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó - –±—ñ–ª—å—à–µ –∑–∞—á—ñ–ø–æ–∫ —Ç–∞ —Å–∏–º–≤–æ–ª—ñ–≤",
      btnClass: "MainBtn3",
      stateClass: "stateText3",
      hintClass: "hintText3",
      disabled: false,
    },
    {
      stateText: "–ú–∞—î–º–æ –≤—Å–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–µ –¥–ª—è –ø—Ä–∏–≤—ñ—Ç–∞–π–∫–∏üëå",
      hintText: "–ê—Ç—Ä–∏–±—É—Ç–∏ —Ç–∞ —Ç–µ–∫—Å—Ç —è–∫—ñ –ø–æ—î–¥–Ω—É—é—Ç—å—Å—è —Ü—å–æ–º—É —Å–ø—Ä–∏—è—Ç–∏–º—É—Ç—å",
      btnClass: "MainBtn4",
      stateClass: "stateText4",
      hintClass: "hintText4",
      disabled: false,
    },
    {
      stateText: "–ì–∞—Ä–Ω–∏–π —à–∞–Ω—Å –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø—Ä–∏–≤—ñ—Ç–∞–π–∫—Éüëç",
      hintText: "–Ñ –≤—Å–µ –¥–ª—è —Å–∏—Å–º–≤–æ–ª—ñ—á–Ω–æ—ó –∫–æ–º–ø–æ–∑–∏—Ü—ñ—ó –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è",
      btnClass: "MainBtn5",
      stateClass: "stateText5",
      hintClass: "hintText5",
      disabled: false,
    },
    {
      stateText: "–ó–∞—è–≤–∫–∞ –Ω–∞ —à–µ–¥–µ–≤—Ä üéâ",
      hintText: "–ì–æ–ª–æ–≤–Ω–µ –≤—Å–µ —á—ñ—Ç–∫–æ –∫–æ–º–±—ñ–Ω—É–≤–∞—Ç–∏ ",
      btnClass: "MainBtn6",
      stateClass: "stateText6",
      hintClass: "hintText6",
      disabled: false,
    },
  ];

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –ø—Ä–æ–≥—Ä–µ—Å—É
  const calculateProgress = useCallback(() => {
    let score = 0;
    if (formData.cardStyle) score++;
    if (formData.cardMood) score++;
    if (formData.photo) score++;
    if (formData.gender) score++;
    if (formData.age) score++;
    if (formData.hobby) score++;
    if (formData.greetingText) score++;
    if (formData.greetingSubject) score++;
    if (formData.trait) score++;
    return score;
  }, [formData]);

  // useEffect –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –ø—Ä–∏ –∑–º—ñ–Ω—ñ formData
  useEffect(() => {
    const newScore = calculateProgress();
    
    // –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–≤–µ–Ω—å (0-5)
    const newLevel = Math.max(0, Math.min(newScore - 1, 5));
    setCurrentLevel(newLevel);
  }, [calculateProgress]);

  // –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞–Ω –∫–Ω–æ–ø–∫–∏
  const currentState = states[currentLevel];
  const { stateText, hintText, btnClass, stateClass, hintClass, disabled } = currentState;

  return (
    <div className="fixedButtonBox">
      <p className={stateClass}>{stateText}</p>
      <button
        className={btnClass}
        type="submit"
        disabled={disabled || loading}
        onClick={onButtonClick}
      >
        {loading ? "–ì–µ–Ω–µ—Ä—É—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–π–∫—É..." : "–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è"}
      </button>
      <p className={hintClass}>{hintText}</p>
    </div>
  );
};

